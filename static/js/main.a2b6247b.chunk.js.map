{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","this","props","Error","Client","Patient","Data","console","error","log","className","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","root","document","getElementById","SMART","init","iss","redirectUri","clientId","scope","client","Promise","all","patient","read","request","id","pageLimit","flat","data","ReactDOM","render","StrictMode","err"],"mappings":"yQAGqBA,E,4JAEnB,WACE,MAKIC,KAAKC,MAJPC,EADF,EACEA,MACAC,EAFF,EAEEA,OACAC,EAHF,EAGEA,QACAC,EAJF,EAIEA,KAQF,OALIH,GAAOI,QAAQC,MAAML,GACrBC,GAAQG,QAAQE,IAAI,WAAYL,GAChCC,GAASE,QAAQE,IAAI,YAAaJ,GAClCC,GAAMC,QAAQE,IAAI,SAAUH,GAEzB,qBAAKI,UAAU,MAAf,SACJP,EAAQ,uCAAiB,+C,GAhBCQ,IAAMC,WCSxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCARQ,EAAOC,SAASC,eAAe,QAErCC,SAAMC,KAAK,CACTC,IAAK,GACLC,YAAa,GACbC,SAAU,GACVC,MAAO,kDACNd,MAAK,SAAAe,GACN,OAAOC,QAAQC,IAAI,CACjBF,EACAA,EAAOG,QAAQC,OACfJ,EAAOK,QAAP,+BAAuCL,EAAOG,QAAQG,IAAM,CACxDC,UAAW,EACXC,MAAM,SAGXvB,MAAK,YAA8B,IAAD,mBAA3Be,EAA2B,KAAnBG,EAAmB,KAAVM,EAAU,KACnCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CACEvC,OAAQ2B,EACR1B,QAAS6B,EACT5B,KAAMkC,MAGVlB,MACD,SAAAsB,GACDH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CACExC,MAAOyC,MAGXtB,MAMJT,M","file":"static/js/main.a2b6247b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nexport default class App extends React.Component {\n\n  render() {\n    const {\n      Error,\n      Client,\n      Patient,\n      Data\n    } = this.props;\n\n    if (Error) console.error(Error);\n    if (Client) console.log(\"Client: \", Client);\n    if (Patient) console.log(\"Patient: \", Patient);\n    if (Data) console.log(\"Data: \", Data);\n\n    return <div className=\"App\">\n      {Error ? <h1>Error</h1> : <h1>Success</h1>}\n    </div>\n  } \n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { oauth2 as SMART } from 'fhirclient';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = document.getElementById('root');\n\nSMART.init({\n  iss: \"\",\n  redirectUri: \"\",\n  clientId: \"\",\n  scope: \"launch/patient offline_access openid fhirUser\",\n}).then(client => {\n  return Promise.all([\n    client,\n    client.patient.read(),\n    client.request(`/Observation?patient=${client.patient.id}`, {\n        pageLimit: 0,\n        flat: true\n    })\n  ]);\n}).then(([client, patient, data]) => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App \n        Client={client}\n        Patient={patient}\n        Data={data}\n      />\n    </React.StrictMode>\n  , root);\n}, err => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App \n        Error={err}\n      />\n    </React.StrictMode>\n  , root);\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}