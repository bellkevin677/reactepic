{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","this","props","Error","Client","Patient","Data","console","error","log","className","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","root","document","getElementById","SMART","init","iss","redirectUri","clientId","scope","client","Promise","all","patient","read","request","id","pageLimit","flat","data","ReactDOM","render","StrictMode","err"],"mappings":"yQAGqBA,E,4JAEnB,WACE,MAKIC,KAAKC,MAJPC,EADF,EACEA,MACAC,EAFF,EAEEA,OACAC,EAHF,EAGEA,QACAC,EAJF,EAIEA,KAQF,OALIH,GAAOI,QAAQC,MAAML,GACrBC,GAAQG,QAAQE,IAAI,WAAYL,GAChCC,GAASE,QAAQE,IAAI,YAAaJ,GAClCC,GAAMC,QAAQE,IAAI,SAAUH,GAEzB,qBAAKI,UAAU,MAAf,SACJP,EAAQ,uCAAiB,+C,GAhBCQ,IAAMC,WCSxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCARQ,EAAOC,SAASC,eAAe,QAErCC,SAAMC,KAAK,CACTC,IAAK,gEACLC,YAAa,2CACbC,SAAU,uCACVC,MAAO,kDACNd,MAAK,SAAAe,GACN,OAAOC,QAAQC,IAAI,CACjBF,EACAA,EAAOG,QAAQC,OACfJ,EAAOK,QAAP,+BAAuCL,EAAOG,QAAQG,IAAM,CACxDC,UAAW,EACXC,MAAM,SAGXvB,MAAK,YAA8B,IAAD,mBAA3Be,EAA2B,KAAnBG,EAAmB,KAAVM,EAAU,KACnCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CACEvC,OAAQ2B,EACR1B,QAAS6B,EACT5B,KAAMkC,MAGVlB,MACD,SAAAsB,GACDH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CACExC,MAAOyC,MAGXtB,MAMJT,M","file":"static/js/main.38a8d311.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nexport default class App extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      Error,\r\n      Client,\r\n      Patient,\r\n      Data\r\n    } = this.props;\r\n\r\n    if (Error) console.error(Error);\r\n    if (Client) console.log(\"Client: \", Client);\r\n    if (Patient) console.log(\"Patient: \", Patient);\r\n    if (Data) console.log(\"Data: \", Data);\r\n\r\n    return <div className=\"App\">\r\n      {Error ? <h1>Error</h1> : <h1>Success</h1>}\r\n    </div>\r\n  } \r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport { oauth2 as SMART } from 'fhirclient';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = document.getElementById('root');\r\n\r\nSMART.init({\r\n  iss: \"https://fhir.epic.com/interconnect-fhir-oauth/api/FHIR/DSTU2/\",\r\n  redirectUri: \"http://bellkevin677.github.io/reactepic/\",\r\n  clientId: \"593798c6-39ad-4ff6-813a-7cc4fd0e74d4\",\r\n  scope: \"launch/patient offline_access openid fhirUser\",\r\n}).then(client => {\r\n  return Promise.all([\r\n    client,\r\n    client.patient.read(),\r\n    client.request(`/Observation?patient=${client.patient.id}`, {\r\n        pageLimit: 0,\r\n        flat: true\r\n    })\r\n  ]);\r\n}).then(([client, patient, data]) => {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App \r\n        Client={client}\r\n        Patient={patient}\r\n        Data={data}\r\n      />\r\n    </React.StrictMode>\r\n  , root);\r\n}, err => {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App \r\n        Error={err}\r\n      />\r\n    </React.StrictMode>\r\n  , root);\r\n});\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}